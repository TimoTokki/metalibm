# This script 
# -> clone pythonsollya from INRIA's gforge
# -> populates submodules of metalibm-lugdunum
# -> download and install Sollya into $PWD/local_instqll
# -> build pythonsollya python module and install into local_install
# -> generate script to setup environement into $PWD/local_install/metalibm_setup_env.bash

# Installing Requirements (On apt-able systems)
# sudo apt-get install python-dev libmpfr-dev libfplll-dev libmpfi-dev libgmp-dev libxml2-dev

# For Developers: 
# Before pushing for the first time into inria's gforge repo you must update your repository 
# by running
# LOGIN=<inria login> sh PATCH_INSTALL_DEVELOPPER


# INSTALLATION DIRECTORIES
LOCAL_DIR=$PWD
INSTALL_DIR=$PWD/local_install

git clone https://gforge.inria.fr/git/metalibm/pythonsollya.git && \
git submodule update --init --recursive && \ 
cd $LOCAL_DIR && \
mkdir $INSTALL_DIR && \
wget https://gforge.inria.fr/frs/download.php/33151/sollya-4.1.tar.gz && \
tar -xzf sollya-4.1.tar.gz && \
cd sollya-4.1/ && ./configure --prefix=$INSTALL_DIR && make -j 4 && make install && \
cd $LOCAL_DIR && \
cd pythonsollya/ && LOCAL_INSTALL_DIR=$INSTALL_DIR python setup.py build && python setup.py install --prefix $INSTALL_DIR  && \
cd $LOCAL_DIR && \
LOCAL_PYTHON_PATH=$(find $INSTALL_DIR -name pythonsollya | sed -e "s/pythonsollya//") && \
echo "export PYTHONPATH=$LOCAL_DIR/metalibm-lugdunum/:$LOCAL_PYTHON_PATH:$PYTHONPATH" > $INSTALL_DIR/metalibm_setup_env.bash 

# USAGE EXAMPLE
# source $INSTALL_DIR/metalibm_setup_env.bash 
# python metalibm-lugdunum/metalibm_functions/ml_exp.py --target x86_fma --output x86_fma_exp2d.c && \
# python metalibm-lugdunum/metalibm_functions/ml_exp.py --disable-fma --target x86_sse41 --output x86_sse41_exp2d.c && \
